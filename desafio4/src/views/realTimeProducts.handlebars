<div class="container">
    <h1 class="mt-5 mb-4 text-center">Real Time Products</h1>
    <div class="row justify-content-center">
        <div class="col-lg-7">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Descripción del producto</th>
                        <th>Precio</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="productList">
                    {{#each products}}
                    <tr>
                        <td>{{this.id}}</td>
                        <td>{{this.title}}</td>
                        <td>{{this.description}}</td>
                        <td>{{this.price}}</td>
                        <td><button onclick="confirmDelete('{{this.id}}')" class="btn btn-danger">Eliminar</button></td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
    
    <div class="row justify-content-center">
        <div class="col-lg-7">
            <div class="card">
                <div class="card-body shadow p-3 mb-5 bg-white rounded">
                    <h2 class="mb-4 text-success text-center">Añadir nuevo producto</h2>
                    <form id="addProductForm" class="text-center">
                        <div class="mb-3">
                            <input type="text" id="title" class="form-control" placeholder="Nombre del Producto" required>
                        </div>
                        <div class="mb-3">
                            <input type="text" id="description" class="form-control" placeholder="Descripción del producto" required>
                        </div>
                        <div class="mb-3">
                            <input type="number" id="price" class="form-control" placeholder="Precio" required>
                        </div>
                        <div class="mb-3">
                            <input type="text" id="thumbnail" class="form-control" placeholder="URL de la imagen (thumbnail)" required>
                        </div>
                        <button type="submit" class="btn btn-success">Añadir</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io()

    socket.on('updateProducts', function(products) {
    const productList = document.getElementById('productList')
    productList.innerHTML = ''
    products.forEach(product => {
        const row = document.createElement('tr')
        row.innerHTML = `
        <td>${product.title}</td>
        <td>${product.description}</td>
        <td>$${product.price}</td>
        <td><button class="btn btn-danger" onclick="confirmDelete('${product.id}')">Eliminar</button></td>`
        productList.appendChild(row)
        })
    })

    document.getElementById('addProductForm').addEventListener('submit', function(e) {
        e.preventDefault()
        const title = document.getElementById('title').value
        const description = document.getElementById('description').value
        const price = document.getElementById('price').value
        const thumbnail = document.getElementById('thumbnail').value
        const productId = generateUniqueId()
        socket.emit('addProduct', { 
            id: productId, 
            title: title, 
            description: description, 
            price: price, 
            thumbnail: thumbnail
            })
        document.getElementById('title').value = ''
        document.getElementById('description').value = ''
        document.getElementById('price').value = ''
        document.getElementById('thumbnail').value = ''
    })

    function generateUniqueId() {
        return '_' + Math.random().toString(36).substr(2, 9)
    }

    function confirmDelete(id) {
        Swal.fire({
            title: 'Eliminar producto',
            text: 'Esta acción eliminará el producto de forma permanente.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Aceptar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                deleteProduct(id)
            }
        })
    }

    function deleteProduct(id) {
        socket.emit('deleteProduct', id)
    }

    socket.on('productDeleted', function(productId) {
        socket.emit('getProducts')
    })
</script>